version: '3'

services:
  hotmart-webhook:
    container_name: HOTMART-WEBHOOK
    restart: unless-stopped
    build: .
    depends_on: 
      postgres:
        condition: service_healthy
    ports: 
      - 3000:3000
    networks: 
      - app-tunnel
    volumes: 
      - ./:/app
    environment:
    - "DB_USERNAME=postgres"
    - "DB_PASSWORD=postgres"
    - "DB_HOST=postgres"
    - "DB_PORT=5432"
  sidekiq:
    container_name: SIDEKIQ-HOTMART-WEBHOOK
    build: .
    volumes:
      - .:/myapp
    networks: 
      - app-tunnel  
    restart: unless-stopped
    command: bundle exec sidekiq
  postgres:
    container_name: POSTGRES-HOTMART-WEBHOOK
    image: postgres:alpine
    environment:
    - "POSTGRES_USER=postgres"
    - "POSTGRES_PASSWORD=postgres"
    ports:
      - "5433:5432"
    networks: 
      - app-tunnel                    
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_volume:/var/lib/postgresql/data
  redis:
    container_name: REDIS-HOTMART-WEBHOOK
    image: redis:5.0-alpine
    ports:
      - 6379:6379
    networks: 
      - app-tunnel 
    restart: unless-stopped

networks: 
  app-tunnel:
    driver: bridge

volumes:
  postgres_volume: